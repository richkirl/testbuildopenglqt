# This is the build file for project "trainingkeyboard"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out

# Rules for linking.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/lib/python-exec/python3.7/meson --internal regenerate /home/jimmy/dev/trainingkeyboard/trainingkeyboard /home/jimmy/dev/trainingkeyboard/trainingkeyboard/bbuild --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build trainingkeyboard@exe/moc_trkbd.cpp: CUSTOM_COMMAND ../trkbd.hpp | /usr/lib64/qt5/bin/moc
 DESC = Generating$ 'trainingkeyboard@exe/moc_trkbd.cpp'.
 COMMAND = /usr/lib64/qt5/bin/moc -DQT_CORE_LIB -I/usr/include/qt5/QtCore -I/usr/include/qt5 -DQT_GUI_LIB -I/usr/include/qt5/QtGui -I/usr/include/qt5 -DQT_CORE_LIB -I/usr/include/qt5/QtCore -DQT_WIDGETS_LIB -I/usr/include/qt5/QtWidgets -I/usr/include/qt5 -I/usr/include/qt5/QtCore -DQT_GUI_LIB -I/usr/include/qt5/QtGui -DQT_CORE_LIB -DQT_OPENGL_LIB -I/usr/include/qt5/QtOpenGL -I/usr/include/qt5 -I/usr/include/qt5/QtCore -I/usr/include/qt5/QtGui -DQT_WIDGETS_LIB -I/usr/include/qt5/QtWidgets -DQT_GUI_LIB -DQT_CORE_LIB ../trkbd.hpp -o trainingkeyboard@exe/moc_trkbd.cpp

build trainingkeyboard@exe/meson-generated_moc_trkbd.cpp.o: cpp_COMPILER trainingkeyboard@exe/moc_trkbd.cpp
 DEPFILE = trainingkeyboard@exe/meson-generated_moc_trkbd.cpp.o.d
 ARGS = -Itrainingkeyboard@exe -I. -I.. -I/usr/include/qt5/QtOpenGL -I/usr/include/qt5 -I/usr/include/qt5/QtCore -I/usr/include/qt5/QtGui -I/usr/include/qt5/QtWidgets -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++17 -g -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -fPIC

build trainingkeyboard@exe/main.cpp.o: cpp_COMPILER ../main.cpp
 DEPFILE = trainingkeyboard@exe/main.cpp.o.d
 ARGS = -Itrainingkeyboard@exe -I. -I.. -I/usr/include/qt5/QtOpenGL -I/usr/include/qt5 -I/usr/include/qt5/QtCore -I/usr/include/qt5/QtGui -I/usr/include/qt5/QtWidgets -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++17 -g -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -fPIC

build trainingkeyboard@exe/trkbd.cpp.o: cpp_COMPILER ../trkbd.cpp
 DEPFILE = trainingkeyboard@exe/trkbd.cpp.o.d
 ARGS = -Itrainingkeyboard@exe -I. -I.. -I/usr/include/qt5/QtOpenGL -I/usr/include/qt5 -I/usr/include/qt5/QtCore -I/usr/include/qt5/QtGui -I/usr/include/qt5/QtWidgets -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++17 -g -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -fPIC

build trainingkeyboard: cpp_LINKER trainingkeyboard@exe/meson-generated_moc_trkbd.cpp.o trainingkeyboard@exe/main.cpp.o trainingkeyboard@exe/trkbd.cpp.o | /usr/lib64/libQt5Core.so.5.14.2 /usr/lib64/libQt5Gui.so.5.14.2 /usr/lib64/libQt5Widgets.so.5.14.2 /usr/lib64/libQt5OpenGL.so.5.14.2 /usr/lib64/libGL.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group -lQt5Core -lQt5Gui -lQt5Core -lQt5Widgets -lQt5Gui -lQt5Core -lQt5OpenGL -lQt5Widgets -lQt5Gui -lQt5Core /usr/lib64/libGL.so -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/lib/python-exec/python3.7/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/lib/python-exec/python3.7/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson --internal scanbuild /home/jimmy/dev/trainingkeyboard/trainingkeyboard /home/jimmy/dev/trainingkeyboard/trainingkeyboard/bbuild /usr/lib/python-exec/python3.7/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-TAGS: CUSTOM_COMMAND PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson --internal tags etags /home/jimmy/dev/trainingkeyboard/trainingkeyboard
 pool = console

build TAGS: phony meson-TAGS

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson --internal tags ctags /home/jimmy/dev/trainingkeyboard/trainingkeyboard
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/lib/python-exec/python3.7/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony trainingkeyboard

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

